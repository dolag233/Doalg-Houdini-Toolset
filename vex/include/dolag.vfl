/****************************************************************
*   This file is generated by Dolag Houdini Tool automatically
*   You can simply include this file and use it's function
*****************************************************************/

#ifndef _DOLAG_H_
#define _DOLAG_H_

function int ddddolag()
{
		return 114514;
}

// test comment
function vector coord_swizzle_vector(vector coord; int coord_swizzle, coord_flip, inv;)
{
        vector result;
        vector swizzle;
        if (coord_swizzle == 0) swizzle = set(0, 1, 2);
        else if (coord_swizzle == 1) swizzle = set(0, 2, 1);
        else if (coord_swizzle == 2) swizzle = set(1, 0, 2);
        else if (coord_swizzle == 3) swizzle = set(1, 2, 0);
        else if (coord_swizzle == 4) swizzle = set(2, 0, 1);
        else if (coord_swizzle == 5) swizzle = set(2, 1, 0);
        
        vector flip;
        if (coord_flip == 0) flip = set(1,1,1);
        else if (coord_flip == 1) flip = set(-1,1,1);
        else if (coord_flip == 2) flip = set(1,-1,1);
        else if (coord_flip == 3) flip = set(1,1,-1);
        else if (coord_flip == 4) flip = set(-1,-1,1);
        else if (coord_flip == 5) flip = set(-1,1,-1);
        else if (coord_flip == 6) flip = set(-1,-1,-1);
        else if (coord_flip == 7) flip = set(1,-1,-1);
        
        result = swizzle(coord, swizzle.x, swizzle.y, swizzle.z) * flip;

        return result;
}



function void foo()
{
        printf("%d", 114514);
}


function void foo()
{
        printf("%d", 114514);
}

// 11
function void foo()
{
        printf("%d", 114514);
}

// 51
function void foo()
{
        printf("%d", 114514);
}

// 111111
function void foo()
{
        printf("%d", 114514);
}

// 1121212
function void foo()
{
        printf("%d", 114514);
}
#endif _DOLAG_VFL_